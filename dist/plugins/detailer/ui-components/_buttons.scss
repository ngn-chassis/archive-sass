// NGN Chassis
// UI Components

// :: Buttons

@if variable-exists(CHASSIS_DETAILER_INCLUDED) and $CHASSIS_DETAILER_INCLUDED {
  $default-button-defs : (
    default: (
      bg-color: $default-button-bg-color,
      text-color: $default-button-text-color,
      border-radius: $default-button-border-radius,
      has-border: $default-button-has-border,
      border-color: $default-button-border-color,
      border-thickness: $default-button-border-thickness,
      font-family: $default-button-fonts,
      font-weight: $default-button-font-weight,
      font-style: $default-button-font-style,
      font-variant: $default-button-font-variant,
      text-decoration: $default-button-text-decoration,
      text-transform: $default-button-text-transform
    ),
    visited: (
      bg-color: $visited-default-button-bg-color,
      text-color: $visited-default-button-text-color,
      has-border: $visited-default-button-has-border,
      border-color: $visited-default-button-border-color,
      border-thickness: $visited-default-button-border-thickness,
      font-family: $visited-default-button-fonts,
      font-weight: $visited-default-button-font-weight,
      font-style: $visited-default-button-font-style,
      font-variant: $visited-default-button-font-variant,
      text-decoration: $visited-default-button-text-decoration,
      text-transform: $visited-default-button-text-transform
    ),
    hover: (
      bg-color: $hover-default-button-bg-color,
      text-color: $hover-default-button-text-color,
      has-border: $hover-default-button-has-border,
      border-color: $hover-default-button-border-color,
      border-thickness: $hover-default-button-border-thickness,
      font-family: $hover-default-button-fonts,
      font-weight: $hover-default-button-font-weight,
      font-style: $hover-default-button-font-style,
      font-variant: $hover-default-button-font-variant,
      text-decoration: $hover-default-button-text-decoration,
      text-transform: $hover-default-button-text-transform
    ),
    active: (
      bg-color: $active-default-button-bg-color,
      text-color: $active-default-button-text-color,
      has-border: $active-default-button-has-border,
      border-color: $active-default-button-border-color,
      border-thickness: $active-default-button-border-thickness,
      font-family: $active-default-button-fonts,
      font-weight: $active-default-button-font-weight,
      font-style: $active-default-button-font-style,
      font-variant: $active-default-button-font-variant,
      text-decoration: $active-default-button-text-decoration,
      text-transform: $active-default-button-text-transform
    ),
    disabled: (
      bg-color: $disabled-default-button-bg-color,
      text-color: $disabled-default-button-text-color,
      border-color: $disabled-default-button-border-color
    )
  );

  @mixin button-pseudo-class($type, $settings: $default-button-defs) {
    $default: map-get($settings, default);
    $defs: map-get($settings, $type);

    @if map-get($defs, bg-color) != map-get($default, bg-color) {
      background: map-get($defs, bg-color);
    }

    @if map-get($defs, has-border) != map-get($default, has-border) {
      @if map-get($defs, has-border) {
        @if map-get($defs, border-thickness) or map-get($defs, border-color) {
          box-shadow: inset 0 0 0 map-get($defs, border-thickness) map-get($defs, border-color);
        }
      } @else {
        box-shadow: none;
      }
    }

    font: {
      @if map-get($defs, fonts) != map-get($default, fonts) {
        family: map-get($defs, fonts);
      }
      @if map-get($defs, font-weight) != map-get($default, font-weight) {
        weight: map-get($defs, font-weight);
      }
      @if map-get($defs, font-style) != map-get($default, font-style) {
        style: map-get($defs, font-style);
      }
      @if map-get($defs, font-variant) != map-get($default, font-variant) {
        variant: map-get($defs, font-variant);
      }
    }

    text: {
      @if map-get($defs, text-decoration) != map-get($default, text-decoration) {
        decoration: map-get($defs, text-decoration);
      }
      @if map-get($defs, text-transform) != map-get($default, text-transform) {
        transform: map-get($defs, text-transform);
      }
    }

    @if map-get($defs, text-color) != map-get($default, text-color) {
      color: map-get($defs, text-color);
    }
  }


  @mixin button-styles($settings: $default-button-defs) {
    $default: map-get($settings, default);
    $disabled: map-get($settings, disabled);

    display: inline-block;

    // Setup default padding, margin and line-height rules
    @include inline-layout-rules(root);

    background: map-get($default, bg-color);
    border-radius: map-get($default, border-radius);

    border: none;
    outline: none;
    box-shadow: none;

    @if map-get($default, has-border) {
      box-shadow: inset 0 0 0 map-get($default, border-thickness) map-get($default, border-color);
    } @else {
      box-shadow: none;
    }

    vertical-align: middle;

    font: {
      family: map-get($default, font-family);
      weight: map-get($default, font-weight);
      style: map-get($default, font-style);
      variant: map-get($default, font-variant);
    }

    text: {
      decoration: map-get($default, text-decoration);
      transform: map-get($default, text-transform);
    }

    color: map-get($default, text-color);

    cursor: pointer;

    @extend %disable-text-selection;

    // Ensure overwrite of <a> styles
    &:link {
      color: map-get($default, text-color);
    }

    &:visited {
      @include button-pseudo-class(visited, $settings);
    }

    &:hover {
      @include button-pseudo-class(hover, $settings);
    }

    &:active {
      @include button-pseudo-class(active, $settings);
    }

    &.disabled {
      background: map-get($disabled, bg-color);

      @if map-get($default, has-border) {
        box-shadow: inset 0 0 0 map-get($default, border-thickness) map-get($disabled, border-color);
      }

      color: map-get($disabled, text-color);
      @extend %disable-pointer-events;
    }

    &:focus {
      outline: none;
    }

  }

  %button {
    @include button-styles;
  }

  .ngn-chassis {

    .button {
      @extend %button;
    }

  }

}
